definitions:
  model.Claims:
    properties:
      admin:
        type: boolean
      id:
        type: integer
      name:
        type: string
      username:
        type: string
    type: object
  model.Worker:
    properties:
      admin:
        type: boolean
      name:
        type: string
      password:
        type: string
      username:
        type: string
      zones:
        items:
          $ref: '#/definitions/model.Zone'
        type: array
    type: object
  model.Zone:
    properties:
      latitude:
        type: number
      limits:
        type: integer
      longitude:
        type: number
      name:
        type: string
      pplCount:
        type: integer
      workers:
        items:
          $ref: '#/definitions/model.Worker'
        type: array
    type: object
info:
  contact: {}
paths:
  /admin/association:
    get:
      consumes:
      - application/json
      description: Desassocia workers a zonas vis IDs
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Worker'
            type: array
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Desassocia workers a zonas
  /admin/users:
    delete:
      consumes:
      - application/json
      description: Exclui uma zona realizada
      operationId: get-string-by-int
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Worker ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Worker'
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Exclui uma worker pelo ID
    get:
      consumes:
      - application/json
      description: Exibe a lista, sem todos os campos, de todas as zonas
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Worker'
            type: array
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Recupera os users
    post:
      consumes:
      - application/json
      description: Adiciona um worker na base de dados
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add worker
        in: body
        name: worker
        required: true
        schema:
          $ref: '#/definitions/model.Worker'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Worker'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Adiciona um Worker
  /admin/zones:
    get:
      consumes:
      - application/json
      description: Exibe a lista, sem todos os campos, de todas as zonas
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Zone'
            type: array
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Recupera as zonas
    post:
      consumes:
      - application/json
      description: Cria uma avaliação sobre a utilização da aplicação
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add zone
        in: body
        name: zone
        required: true
        schema:
          $ref: '#/definitions/model.Zone'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Zone'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Adicionar uma zona
  /admin/zones/{id}:
    delete:
      consumes:
      - application/json
      description: Exclui uma zona realizada
      operationId: get-string-by-int
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Zone'
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Exclui uma zona pelo ID
  /api/admin/association:
    post:
      consumes:
      - application/json
      description: Associa workers a zonas via IDs
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Not Found
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Associa workers a zonas
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica o utilizador e gera o token para os próximos acessos
      parameters:
      - description: Do login
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/model.Worker'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Claims'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Realizar autenticação
  /auth/refresh_token:
    put:
      consumes:
      - application/json
      description: Atualiza o token de autenticação do usuário
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Claims'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Atualiza token de autenticação
swagger: "2.0"
